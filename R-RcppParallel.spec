#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
# Using build pattern: R
#
Name     : R-RcppParallel
Version  : 5.1.7
Release  : 40
URL      : https://cran.r-project.org/src/contrib/RcppParallel_5.1.7.tar.gz
Source0  : https://cran.r-project.org/src/contrib/RcppParallel_5.1.7.tar.gz
Summary  : Parallel Programming Tools for 'Rcpp'
Group    : Development/Tools
License  : Apache-2.0 GPL-3.0
Requires: tbb
Requires: tbb-dev
BuildRequires : buildreq-R
BuildRequires : tbb-dev
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}
Patch1: libs.patch

%description
For example, the 'parallelFor()' function can be used to convert the work of
    a standard serial "for" loop into a parallel one and the 'parallelReduce()'
    function can be used for accumulating aggregate or other values.

%prep
%setup -q -n RcppParallel
%patch -P 1 -p1
pushd ..
cp -a RcppParallel buildavx2
popd

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1687200073

%install
export SOURCE_DATE_EPOCH=1687200073
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/R-RcppParallel
cp %{_builddir}/RcppParallel/src/tbb/COPYING %{buildroot}/usr/share/package-licenses/R-RcppParallel/7df059597099bb7dcf25d2a9aedfaf4465f72d8d || :
cp %{_builddir}/RcppParallel/src/tbb/LICENSE %{buildroot}/usr/share/package-licenses/R-RcppParallel/7df059597099bb7dcf25d2a9aedfaf4465f72d8d || :
export LANG=C.UTF-8
export CFLAGS="$CFLAGS -O3 -flto -fno-semantic-interposition "
export FCFLAGS="$FFLAGS -O3 -flto -fno-semantic-interposition "
export FFLAGS="$FFLAGS -O3 -flto -fno-semantic-interposition "
export CXXFLAGS="$CXXFLAGS -O3 -flto -fno-semantic-interposition "
export AR=gcc-ar
export RANLIB=gcc-ranlib
export LDFLAGS="$LDFLAGS  -Wl,-z -Wl,relro"
mkdir -p %{buildroot}/usr/lib64/R/library

mkdir -p ~/.R
mkdir -p ~/.stash
echo "CFLAGS = $CFLAGS -march=x86-64-v3 -ftree-vectorize -mno-vzeroupper" > ~/.R/Makevars
echo "FFLAGS = $FFLAGS -march=x86-64-v3 -ftree-vectorize -mno-vzeroupper " >> ~/.R/Makevars
echo "CXXFLAGS = $CXXFLAGS -march=x86-64-v3 -ftree-vectorize -mno-vzeroupper " >> ~/.R/Makevars
R CMD INSTALL --install-tests --use-LTO --built-timestamp=${SOURCE_DATE_EPOCH} --data-compress=none --compress=none --build  -l %{buildroot}/usr/lib64/R/library .
for i in `find %{buildroot}/usr/lib64/R/ -name "*.so"`; do mv $i $i.avx2 ; mv $i.avx2 ~/.stash/; done
echo "CFLAGS = $CFLAGS -march=x86-64-v4 -ftree-vectorize  -mno-vzeroupper -mprefer-vector-width=512 " > ~/.R/Makevars
echo "FFLAGS = $FFLAGS -march=x86-64-v4 -ftree-vectorize  -mno-vzeroupper -mprefer-vector-width=512 " >> ~/.R/Makevars
echo "CXXFLAGS = $CXXFLAGS -march=x86-64-v4 -ftree-vectorize -mno-vzeroupper -mprefer-vector-width=512  " >> ~/.R/Makevars
R CMD INSTALL --preclean --install-tests --use-LTO --no-test-load --data-compress=none --compress=none --built-timestamp=${SOURCE_DATE_EPOCH} --build  -l %{buildroot}/usr/lib64/R/library .
for i in `find %{buildroot}/usr/lib64/R/ -name "*.so"`; do mv $i $i.avx512 ; mv $i.avx512 ~/.stash/; done
echo "CFLAGS = $CFLAGS -ftree-vectorize " > ~/.R/Makevars
echo "FFLAGS = $FFLAGS -ftree-vectorize " >> ~/.R/Makevars
echo "CXXFLAGS = $CXXFLAGS -ftree-vectorize " >> ~/.R/Makevars
R CMD INSTALL --preclean --use-LTO --install-tests --data-compress=none --compress=none --built-timestamp=${SOURCE_DATE_EPOCH} --build  -l %{buildroot}/usr/lib64/R/library .
cp ~/.stash/* %{buildroot}/usr/lib64/R/library/*/libs/ || :
%{__rm} -rf %{buildroot}%{_datadir}/R/library/R.css
%check
export LANG=C.UTF-8
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export _R_CHECK_FORCE_SUGGESTS_=false
R CMD check --no-manual --no-examples --no-codoc . || :

## Remove excluded files
rm -f %{buildroot}*/usr/lib64/R/library/RcppParallel/lib/libtbb.so
rm -f %{buildroot}*/usr/lib64/R/library/RcppParallel/lib/libtbb.so.2
rm -f %{buildroot}*/usr/lib64/R/library/RcppParallel/lib/libtbbmalloc.so
rm -f %{buildroot}*/usr/lib64/R/library/RcppParallel/lib/libtbbmalloc.so.2
rm -f %{buildroot}*/usr/lib64/R/library/RcppParallel/lib/libtbbmalloc_proxy.so
rm -f %{buildroot}*/usr/lib64/R/library/RcppParallel/lib/libtbbmalloc_proxy.so.2
/usr/bin/elf-move.py avx2 %{buildroot}-v3 %{buildroot} %{buildroot}/usr/share/clear/filemap/filemap-%{name}

%files
%defattr(-,root,root,-)
